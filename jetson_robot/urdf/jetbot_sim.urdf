<?xml version="1.0" ?>
<robot name="two_wheeled_robot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- ****************** ROBOT CONSTANTS *******************************  -->
  <!-- Define the size of the robot's main base_link in meters -->
  <xacro:property name="base_width" value="0.085"/>
  <xacro:property name="base_length" value="0.133"/>
  <xacro:property name="base_height" value="0.053"/>

  <!-- Define the size of camera_link in meters -->
  <xacro:property name="cam_width" value="0.005"/>
  <xacro:property name="cam_length" value="0.085"/>
  <xacro:property name="cam_height" value="0.01"/>

  <!-- Define the size of imu_link in meters -->
  <xacro:property name="imu_width" value="0.0013"/>
  <xacro:property name="imu_length" value="0.0018"/>
  <xacro:property name="imu_height" value="0.001"/>

  <!-- Define the shape of the robot's two back wheels in meters -->
  <xacro:property name="wheel_radius" value="0.0258"/>
  <xacro:property name="wheel_width" value="0.004"/>

  <!-- x-axis points forward, y-axis points to left, z-axis points upwards -->
  <!-- Define the gap between the wheel and base_link along y-axis in meters -->
  <xacro:property name="wheel_ygap" value="0.003"/>

  <!-- Position the wheels along the z-axis -->
  <xacro:property name="wheel_zoff" value="0.012"/>

  <!-- Position the wheels along the x-axis -->
  <xacro:property name="wheel_xoff" value="-0.035"/>

  <!-- Position the caster wheel along the x-axis -->
  <xacro:property name="caster_xoff" value="-0.05"/>

  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m h d w">
    <inertia  ixx="${(m*(h*h+d*d))/12}" ixy = "0" ixz = "0"
              iyy="${(m*(w*w+d*d))/12}" iyz = "0"
              izz="${(m*(w*w+h*h))/12}"
     />
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}"
     />
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertia  ixx="${(2*r*r*m)/3}" ixy = "0" ixz = "0"
              iyy="${(2*r*r*m)/3}" iyz = "0"
              izz="${(2*r*r*m)/3}"
     /> 
  </xacro:macro>

<gazebo reference="map">
    <material>Gazebo/Red</material>
  </gazebo>

  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
  <!-- Define the center of the main robot base_link projected on the ground -->	
  <link name="map"/>
  <!-- The base footprint of the robot is located underneath the base_link -->
  <joint name="base_link" type="planar">
    <parent link="map"/>
    <child link="base_link" />
    <origin xyz="0.0 0.0 ${(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

  <!-- ********************** ROBOT BASE *********************************  -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="${base_length} ${base_width} ${base_height}"/>
        </geometry>
    </visual>

    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="0.8" w="${base_width}" d="${base_length}" h="${base_height}"/>
    
  </link>

  <!-- *********************** DRIVE WHEELS ******************************  -->

  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="White">
          <color rgba="${255/255} ${255/255} ${255/255} 1.0"/>
        </material>
      </visual>
      
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      
      <xacro:cylinder_inertia m="0.017" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <!-- Connect the wheels to the base_link at the appropriate location, and 
         define a continuous joint to allow the wheels to freely rotate about
         an axis -->
    <joint name="${prefix}_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <!-- Instantiate two wheels using the macro we just made through the 
       xacro:wheel tags. We also define the parameters to have one wheel
       on both sides at the back of our robot (i.e. x_reflect=-1). -->
  <xacro:wheel prefix="left_wheel" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="right_wheel" x_reflect="-1" y_reflect="-1" />

  <!-- *********************** CASTER WHEEL ******************************  -->
  <!-- We add a caster wheel. It will be modeled as sphere.
       We define the wheelâ€™s geometry, material and the joint to connect it to 
       base_link at the appropriate location. -->
  <link name="front_caster">
    <visual>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
      <material name="White">
        <color rgba="${255/255} ${255/255} ${255/255} 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
    </collision>
    <xacro:sphere_inertia m="0.005" r="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
  </link>

  <gazebo reference="front_caster">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <material>Gazebo/White</material>
  </gazebo>

  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster"/>
    <origin xyz="${caster_xoff} 0.0 ${-(base_height/2)}" rpy="0 0 0"/>
  </joint>

  <!-- *********************** IMU SETUP *********************************  -->
  <!-- Each sensor must be attached to a link.                              --> 
  <link name="imu_link">
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <box size="${imu_length} ${imu_width} ${imu_height}"/>
    </geometry>
    <material name="White">
        <color rgba="${0/255} ${0/255} ${0/255} 1.0"/>
    </material>
  </visual>
  <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${imu_length} ${imu_width} ${imu_height}"/>
      </geometry>
  </collision>
  </link>
  
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0.0083 -0.04141 ${-(base_height/2) + 0.024}" rpy="0 0 1.57079632679"/>
  </joint>



  <!-- *********************** CAMERA SETUP **********************************  -->


    <link name="camera_left">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.005" length="0.01"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.005" length="0.01"/>
            </geometry>
            <material name="Black">
                <color rgba="${0/255} ${0/255} ${0/255} 1.0"/>
            </material>
        </visual>
    </link>

    <joint name="camera_left_joint" type="fixed">
        <parent link="base_link"/>
        <child link="camera_left"/>
        <origin xyz="0.0665 0.0364902851051 0.0395" rpy="4.27446 0 -1.57079632679"/>
    </joint>

    <link name="camera_right">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.005" length="0.01"/>
            </geometry>
        </collision>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="0.005" length="0.01"/>
            </geometry>
            <material name="Black">
                <color rgba="${0/255} ${0/255} ${0/255} 1.0"/>
            </material>
        </visual>
    </link>

    <joint name="camera_right_joint" type="fixed">
        <parent link="base_link"/>
        <child link="camera_right"/>
        <origin xyz="0.0665 -0.0364902851051 0.0395" rpy="4.27446 0 -1.57079632679"/>
    </joint>
</robot>